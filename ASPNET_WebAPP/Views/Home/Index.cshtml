@{
    ViewData["Title"] = "Products";
}

<h1>@ViewData["Title"]</h1>

<div class="p-5">
    <div class="border border-light border-3 rounded">
        <div class="container">
            <div class="p-5">
                <div class="row">
                    <div class="col-8">
                        <h6>Products</h6>
                    </div>
                    <div class="col-4">
                        <button class="btn btn-sm btn-outline-success newProduct">New Product</button>
                    </div>
                </div>

                <hr />

                <div class="p-5 rounded shadow-sm" id="divTabela">

                </div>

            </div>
        </div>
    </div>
</div>
</div>

<div id="modal" class="modal fade" role="dialog">

    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title"></h6>
            </div>

            <div class="modal-body">
                <input type="hidden" class="form-control form-control-sm productId" />
                <input type="hidden" class="form-control form-control-sm createdAT" />
                <input type="hidden" class="form-control form-control-sm updatedAT" />

                <div class="form-group">
                    <label>Name</label>
                    <input type="text" class="form-control form-control-sm Name" />
                    <span class="text-danger errName d-none"></span>
                </div>

                <div class="form-group">
                    <label>Price</label>
                    <input type="number" data-inputmask="'R$': 'currency'" class="form-control form-control-sm Price" />
                    <span class="text-danger errPrice d-none">Enter the Price</span>
                </div>

                <div class="form-group">
                    <label>Brand</label>
                    <input type="text" class="form-control form-control-sm Brand" />
                    <span class="text-danger errBrand d-none">Enter the Brand</span>
                </div>
            </div>

            <div class="modal-footer">
                <div class="form-group">
                    <input type="button" value="Save" class="btn btn-sm btn-outline-success btnSalvar" />
                    <input type="button" value="Cancel" class="btn btn-sm btn-light" data-bs-dismiss="modal" />
                </div>
            </div>
        </div>
    </div>

</div>

@section scripts {
<script>
    $(document).ready(function () {
        carregarDados();
    });

    function carregarDados() {
        $.ajax({
            url: "https://localhost:7100/api/Product",
            method: "GET",
            success: function (products) {
                montarTabela(products);
            }
        });
    }

    $(".newProduct").click(function () {
        escolherTituloModal("new product registration");
        mostrarModal();
        limparFormulario();
        $('.Id').val(0);
    });

    $(".btnSalvar").click(function () {
        var product = {
            Id: $('.productId').val() > 0 ? $('.productId').val() : "0",
            Name: $('.Name').val(),
            Price: $('.Price').val(),
            Brand: $('.Brand').val(),
        };
        if (validarFormulario(product)) {
            if (parseInt(product.Id) > 0)
                UpdateProduct(product.Id, product);
            else
                CreateProduct(product);
        }
    });

    function CreateProduct(product) {
        var productJSON = JSON.stringify(product);

        $.ajax({
            url: " https://localhost:7100/api/Product",
            method: 'POST',
            accepts: "*/*",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            data: productJSON,
            success: function (ProductCreated) {
                $("#modal").modal('hide');
                var linhaNovoProduto = `<tr id="${ProductCreated.id}">`;
                linhaNovoProduto += `<td>${ProductCreated.name}</td>`;
                linhaNovoProduto += `<td>${ProductCreated.price}</td>`;
                linhaNovoProduto += `<td>${ProductCreated.brand}</td>`;
                linhaNovoProduto += `<td>${ProductCreated.createdAt}</td>`;
                linhaNovoProduto += `<td>${ProductCreated.updatedAt}</td>`;
                linhaNovoProduto += `<td><button class="btn btn-sm btn-outline-info"
                    onclick="SearchProductById(${ProductCreated.id})">Edit</button> |
                    <button class="btn btn-sm btn-outline-danger"
                    onclick="DeleteProduct(${ProductCreated.id})">Delete</button></td>`;
                linhaNovoProduto += '</tr>';
                $(".tabela tbody").append(linhaNovoProduto);
                limparFormulario();
            }
        });
    }

    function SearchProductById(productId) {
        $.ajax({
            url: "https://localhost:7100/api/Product/GetById",
            method: 'GET',
            data: {
                pProductID: productId
            },
            success: function (product) {
                mostrarModal();
                escolherTituloModal(`Update Product ${product.name}`);
                $(".productId").val(product.id);
                $(".Name").val(product.name);
                $(".Price").val(product.price);
                $(".Brand").val(product.brand);
                $(".createdAT").val(product.createdAt);
                $(".updatedAT").val(product.updatedAt);
            }
        })
    }

    function UpdateProduct(productId, product) {
        var productJSON = JSON.stringify(product);

        $.ajax({
            url: "https://localhost:7100/api/Product?pProductID=" + productId,
            type: 'PUT',
            accepts: "*/*",
            contentType: "application/json;",
            data: productJSON,
            success: function (productUpdated) {
                $("#modal").modal('hide');
                var linhaTabela = $(`#${productUpdated.id}`);
                linhaTabela[0].childNodes[0].innerText = productUpdated.name;
                linhaTabela[0].childNodes[1].innerText = productUpdated.price;
                linhaTabela[0].childNodes[2].innerText = productUpdated.brand;
                linhaTabela[0].childNodes[3].innerText = productUpdated.createdAt;
                linhaTabela[0].childNodes[4].innerText = productUpdated.updatedAt;
                limparFormulario();
            }
        });
    }

    function DeleteProduct(productId) {
        $.ajax({
            url: "https://localhost:7100/api/Product?pProductID=" + productId,
            type: 'DELETE',
            accepts: "*/*",
            contentType: "application/json;",
            success: function (status) {
                if (status) {
                    alert("deleted product!");
                    document.getElementById(productId).remove();
                }
                else
                    alert(status.mensagem);
            }
        })
    }

    function montarTabela(products) {
        var indice = 0;
        var divTabela = document.getElementById("divTabela");
        var tabela = '<table class="table table-sm table-hover table-striped tabela">';
        tabela += '<thead>';
        tabela += '<tr>';
        tabela += '<th>Name</th>';
        tabela += '<th>Price</th>';
        tabela += '<th>Brand</th>';
        tabela += '<th>Created At</th>';
        tabela += '<th>Updated At</th>';
        tabela += '<th>Action</th>';
        tabela += '</tr>';
        tabela += '</thead>';
        tabela += '<tbody>';
        for (indice = 0; indice < products.length; indice++) {
            var vCreatedAt = new Date(products[indice].createdAt);
            var vUpdatedAt = new Date(products[indice].updatedAt);

            tabela += `<tr id="${products[indice].id}">`;
            tabela += `<td>${products[indice].name}</td>`;
            tabela += `<td>${products[indice].price}</td>`;
            tabela += `<td>${products[indice].brand}</td>`;
            tabela += `<td>${vCreatedAt.toLocaleDateString('pt-BR')}</td>`;
            tabela += `<td>${vUpdatedAt.toLocaleDateString('pt-BR')}</td>`;
            tabela += `<td><button class="btn btn-sm btn-outline-info" onclick="SearchProductById(${products[indice].id})">Edit</button> |
                        <button class="btn btn-sm btn-outline-danger" onclick="DeleteProduct(${products[indice].id})">Delete</button></td>`;
            tabela += '</tr>';
        }
        tabela += '</tbody>';
        tabela += '</table>';
        divTabela.innerHTML = tabela;
    }

    function validarFormulario(product) {
        let NameValido = validarName(product.Name);
        let PriceValida = validarPrice(product.Price);
        let BrandValida = validarBrand(product.Brand);
        if (NameValido == true && PriceValida == true && BrandValida == true)
            return true;
        return false;
    }
    /* #region Validação */
    function validarName(Name) {
        let NameValido = true;
        if (Name.trim() == '' || Name == undefined) {
            $(".Name").addClass('is-invalid');
            $(".errName").text("fill in the name");
            $(".errName").removeClass("d-none");
            NameValido = false;
        }
        else {
            $(".Name").removeClass('is-invalid');
            $(".Name").addClass('is-valid');
            $(".errName").addClass("d-none");
            NameValido = true;
        }
        return NameValido;
    }

    function validarPrice(Price) {
        let PriceValida = true;
        if (isNaN(Price) || Price == undefined || Price == '') {
            $(".Price").addClass('is-invalid');
            $(".erroPrice").text("fill in the price");
            $(".erroPrice").removeClass("d-none");
            PriceValida = false;
        }
        else {
            $(".Price").removeClass('is-invalid');
            $(".Price").addClass('is-valid');
            $(".erroPrice").addClass("d-none");
            PriceValida = true;
        }
        return PriceValida;
    }

    function validarBrand(Brand) {
        let BrandValida = true;
        if (Brand.trim() == '' || Brand == undefined) {
            $(".Brand").addClass('is-invalid');
            $(".errBrand").text("fill in the brand");
            $(".errBrand").removeClass("d-none");
            BrandValida = false;
        }
        else {
            $(".Brand").removeClass('is-invalid');
            $(".Brand").addClass('is-valid');
            $(".errBrand").addClass("d-none");
            BrandValida = true;
        }
        return BrandValida;
    }
    /* #endregion */

    function mostrarModal() {
        new bootstrap.Modal($("#modal"), {}).show();
    }

    function limparFormulario() {
        $(".Name").val('');
        $(".Name").removeClass('is-valid');
        $(".Price").val('');
        $(".Price").removeClass('is-valid');
        $(".Brand").val('');
        $(".Brand").removeClass('is-valid');
    }

    function escolherTituloModal(texto) {
        $(".modal-title").text(texto);
    }

</script>
}